import threading
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from bs4 import BeautifulSoup
# Function to handle each figure click and extract the corresponding layerPop content
def handle_figure(figure, index):
    # Click the figure
    figure.click()
    
    # Wait for the corresponding layerPop div to appear
    layer_pop_id = f"layerPop{index}"
    #WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.ID, layer_pop_id)))
    element = driver.find_element_by_css(f'div[class*="{layer_pop_id}"]')
    driver.execute_script("arguments[0].click();", element)

    print(f"------------------------------------\n")
    print(f"layerPop{index} appeared")
    print(f"------------------------------------\n")
    
    # Get the page source after the click event
    page_source = driver.page_source    
    # Parse the page source with BeautifulSoup
    soup = BeautifulSoup(page_source, 'html.parser')
    
    # Find the div with the corresponding layerPop id
    #layer_pop_div = soup.find('div', id=layer_pop_id)
    #
    ## Print out the entire div element or handle it as needed
    #print(layer_pop_div)

# Set up the web driver
driver = webdriver.Chrome()
# Replace 'url' with the actual URL you want to open
url = 'http://pwnable.kr/play.php'
# Open the URL
driver.get(url)
# Find all figures
figures = WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located((By.TAG_NAME, "figure")))
# Create a thread for each figure
threads = []
for index, figure in enumerate(figures, start=1):
    thread = threading.Thread(target=handle_figure, args=(figure, index))
    threads.append(thread)
    thread.start()
# Wait for all threads to complete
for thread in threads:
    thread.join()
# Close the browser when done
driver.quit()
